---
import Layout from "@layouts/Layout.astro";
import Posts from "public/content/posts.json";
import '@pages/post.scss';
import ContactForm from "@components/ContactForm.astro";
import Airtable from 'Airtable';

export async function getStaticPaths() {

    const lang = "en";

    const view = import.meta.env.MODE == "development" ? "Staging" : "Production";

    var base = new Airtable({apiKey: 'patASZXZ7wZJ7UAze.d6f74d1a0071400f4e538494d110713361c7f49cff46d77737deb93602a1cbc3'}).base('appg1WC3k58wcqQ72');

    const allRecords = (airtableBase) => {
        return (
            airtableBase(`blog ${lang}`).select({
                view: view,
            }).all()
        )
    }

    const allPosts = await allRecords(base);

    const posts = allPosts.reduce((acc, x) => {
        acc.push({
            atId: x["id"],
            path: x["fields"]["Path"],
            title: x["fields"]["Title"],
            description: x["fields"]["Description"],
            date: x["fields"]["Date"],
            author: x["fields"]["Author"],
            topic: x["fields"]["Topic"],
            length: x["fields"]["Length"],
            content: x["fields"]["Content"],
            image: x["fields"]["Image"][0]["url"],
        });
        return acc;
    }, []);

    console.log(posts);

    const staticPaths = posts.reduce((acc, v) => {
        acc.push({params: {path: v.path}, props: {title: v.title, description: v.description, author: v.author, length: v.length, date: v.date, topic: v.topic, content: v.content, image: v.image}});
        return acc;
    }, []);

    return staticPaths;
}

const { path } = Astro.params;
const { title, description, author, length, topic, date, content, image } = Astro.props;

const lang = "en";
---

<Layout
    title={title}
    description={description}
    lang={lang}
    esHref={`/blog/${path}`}
    enHref={`/en/blog/${path}`}
    pageClass={`blog-post blog-post-${path}`}
    canonical={lang == "es" ? `/blog/${path}` : `/en/blog/${path}`}
    >
    <main id="main">
        <section data-lang={lang} data-title={title} id={`post-${title}`} class="section-alt post">
            <div class="container">
                <h1 class="header">{title}</h1>
                <div class="post__details">
                    <div class="post__details flex flex-align-center flex-justify-between">
                        <p><b>{lang == "es" ? "Tiempo de lectura:" : "Reading time:"}</b> {length}</p>
                        <p><b>{lang == "es" ? "Tema:" : "Topic:"}</b> {topic}</p>
                        <p><b>{lang == "es" ? "Autor:" : "Author:"}</b> {author}</p>
                        <p><b>{lang == "es" ? "Fecha:" : "Date:"}</b> {date}</p>
                    </div>
                    <div class="post__image" style={`background-image: url(${image})`}></div>
                    <div class="post__content">
                        <Fragment set:html={content} />
                    </div>
                    <div class="back__link">
                        <a href={lang == "es" ? "/blog#posts" : "/en/blog#posts"}>{lang == "es" ? "Descubre mas Pepitas de Fe" : "Uncover more Nuggets of Faith"}</a>
                    </div>
                </div>
            </div>
        </section>
        <section id="contact" class="section contact">
            <div class="container">
                <h2 class="subheading">{lang == "es" ? "Tienes preguntas o comentarios sobre este articulo?" : "Do you have any questions or comments about this post?"}</h2>
                <ContactForm lang={lang} />
            </div>
        </section>
    </main>
</Layout>
<script>
    window.addEventListener("load", () => {
        const title = document.querySelector("section.post").getAttribute("data-title");
        const lang = document.querySelector("section.post").getAttribute("data-lang");
        const message = lang == "es" ? "Pregunta/comentario sobre " : "Question/comment about ";

        document.getElementById("subject").value = `${message} ${title}`
    })
</script>